name: Run Cross-Platform Tests

on:
  workflow_run:
    workflows: [Create Development Release]
    types: [completed]
  workflow_dispatch:

jobs:
  cross_platform_tests:
    name: Test
    runs-on: ${{ matrix.os }}
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, macos-10.15, macos-11, windows-2019]
        java-version: [ '8', '11', '17' ]
        include:
          - os: ubuntu-18.04
            shell: bash
          - os: ubuntu-20.04
            shell: bash
          - os: macos-10.15
            shell: bash
          - os: macos-11
            shell: bash
          - os: windows-2019
            shell: wsl-bash
    defaults:
      run:
        shell: ${{ matrix.shell }} {0}
    steps:
      - name: Set up WSL
        if: ${{ runner.os == 'Windows' }}
        uses: Vampire/setup-wsl@v1
        with:
          distribution: Ubuntu-20.04
      - name: Update and install dependencies
        if: ${{ runner.os == 'Windows' }}
        run: |
          sudo apt-get install -y curl unzip wget apt-transport-https gnupg
      - name: Set up JDK ${{ matrix.java-version }} on WSL
        if: ${{ runner.os == 'Windows' }}
        run: |
          wget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | sudo apt-key add -
          echo "deb https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | sudo tee /etc/apt/sources.list.d/adoptium.list
          sudo apt-get update
          sudo apt-get install -y temurin-${{ matrix.java-version }}-jdk
      - name: Set up JDK ${{ matrix.java-version }}
        if: ${{ runner.os != 'Windows' }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'
      - name: Download and extract build validation Scripts
        run: |
          curl -L -O https://github.com/gradle/gradle-enterprise-build-validation-scripts/releases/download/development-latest/gradle-enterprise-gradle-build-validation-dev.zip
          unzip -o gradle-enterprise-gradle-build-validation-*.zip
          curl -L -O https://github.com/gradle/gradle-enterprise-build-validation-scripts/releases/download/development-latest/gradle-enterprise-maven-build-validation-dev.zip
          unzip -o gradle-enterprise-maven-build-validation-*.zip
      - name: Run Gradle Experiment 01
        run: |
          cd gradle-enterprise-gradle-build-validation
          ./01-validate-incremental-building.sh -r https://github.com/etiennestuder/java-ordered-properties -t build -s https://ge.solutions-team.gradle.com
      - name: Run Gradle Experiment 02
        run: |
          cd gradle-enterprise-gradle-build-validation
          ./02-validate-local-build-caching-same-location.sh -r https://github.com/etiennestuder/java-ordered-properties -t build -s https://ge.solutions-team.gradle.com
      - name: Run Gradle Experiment 03
        run: |
          cd gradle-enterprise-gradle-build-validation
          ./03-validate-local-build-caching-different-locations.sh -r https://github.com/etiennestuder/java-ordered-properties -t build -s https://ge.solutions-team.gradle.com
      - name: Run Maven Experiment 01
        run: |
          cd gradle-enterprise-maven-build-validation
          ./01-validate-local-build-caching-same-location.sh -r https://github.com/gradle/maven-build-scan-quickstart.git -g test -s https://ge.solutions-team.gradle.com
      - name: Run Maven Experiment 02
        run: |
          cd gradle-enterprise-maven-build-validation
          ./02-validate-local-build-caching-different-locations.sh -r https://github.com/gradle/maven-build-scan-quickstart.git -g test -s https://ge.solutions-team.gradle.com
